<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yinuo.strategy.mapper.TravelMapper">
   <resultMap id="TravelVo" type="com.inuol.vo.strategy.TravelVo">
        <id property="id" column="id" ></id>
        <result property="title" column="title"/>
       <result property="contents" column="contents"/>
       <result property="labelId" column="label_id"/>
       <result property="labelName" column="labelName"/>
       <result property="annexType" column="annex_type"/>
       <result property="img" column="img"/>
       <result property="annexUrls" column="annex_urls"/>
       <result property="createAddressName" column="create_address_name"/>
       <result property="topStatus" column="top_status"/>
       <result property="clicks" column="clicks"/>
       <result property="praises" column="praises"/>
       <result property="comments" column="comments"/>
       <result property="collections" column="collections"/>

       <result property="createUserId" column="create_user_id"/>
       <result property="createTime" column="create_time"/>
        <collection property="praisesUsers" ofType="com.inuol.vo.strategy.UserVo">
            <id property="id" column="id2" ></id>
        </collection>
   </resultMap>

    <insert id="insertTravel" parameterType="com.inuol.entity.strategy.Travel" >
    	insert into t_travel(`id`,`title`,`contents`,`label_id`,`annex_type`,`annex_urls`,`create_address_name`,`status`,`create_user_id`)
    	values (#{id},#{title},#{contents},#{labelId},#{annexType},#{annexUrls},#{createAddressName},#{status},#{createUserId})
    </insert>

    <select id="selectTravelList" parameterType="map" resultType="com.inuol.entity.strategy.Travel">
      <!--<if test="frist!=null">-->
          select * from (
              select * from (
              select t1.id,t1.title,t1.contents,t1.label_id,t2.title labelName,
              t1.annex_type,t1.annex_urls,t1.img,t1.create_address_name,t1.praises,t1.clicks,t1.comments,t1.collections, t1.create_user_id,t1.top_time,t1.create_time,t1.`top_status`
              from t_travel t1
              LEFT JOIN t_travel_label t2 on t1.label_id=t2.id
              where t1.`status`=1
              and t1.top_status=2
                <if test="uid!=null">
                    and t1.create_user_id =#{uid}
                </if>
              order by  t1.top_time desc LIMIT  5) tmp1

              union all
              select * from (
              select t1.id,t1.title,t1.contents,t1.label_id,t2.title labelName,
              t1.annex_type,t1.annex_urls,t1.img,t1.create_address_name,t1.praises,t1.clicks,t1.comments,t1.collections,t1.create_user_id,t1.top_time,t1.create_time,t1.`top_status`
              from t_travel t1
              LEFT JOIN t_travel_label t2 on t1.label_id=t2.id
              where t1.`status`=1
              and t1.top_status=1
            <if test="uid!=null">
                and t1.create_user_id =#{uid}
            </if>
                ) tmp2
              )tmp where 1=1 order by top_status desc, top_time desc ,create_time desc
      <!--</if>
       <if test="frist==null">
           select t1.id,t1.title,t1.contents,t1.label_id,t2.title labelName,
           t1.annex_type,t1.annex_urls,t1.img,t1.create_address_name,t1.praises,t1.create_user_id
           from t_travel t1
           LEFT JOIN t_travel_label t2 on t1.label_id=t2.id
           where t1.`status`=1
           and t1.top_status=1
           order by  t1.create_time desc
       </if>-->
        <!--<if test="uid!=null">
              and create_user_id =#{uid}
        </if>-->
    </select>

    <select id="selectTravelDetail"  parameterType="map" resultMap="TravelVo">
          select t1.id,t1.title,t1.contents,t1.label_id,t2.title labelName,
           t1.annex_type,t1.annex_urls,t1.img,t1.top_status,
           t1.clicks, t1.praises,t1.comments,t1.collections, t1.create_address_name,t1.create_user_id,t1.create_time,
           t3.uid id2
           from t_travel t1
           LEFT JOIN t_travel_label t2 on t1.label_id=t2.id
           left join t_travel_praises t3 on t3.tid =t1.id and t3.status=1


           where  t1.id=#{id}
          order by t3.update_time desc ,t3.create_time desc
           <if test="userPageSize!=null">
               limit #{userPageSize}
           </if>
    </select>

    <update id="updateTravelDetailClicks" parameterType="long">
          update t_travel set clicks=clicks+1 where id=#{id}
    </update>
    <update id="updateTravelDetailPraisesAdd"  parameterType="long">
          update t_travel set praises=praises+1 where id=#{id}
    </update>
    <update id="updateTravelDetailPraisesSub"  parameterType="long">
          update t_travel set praises=praises-1 where id=#{id} and praises>=1
    </update>
    <update id="updateTravelDetailCommentsAdd"  parameterType="long">
          update t_travel set comments=comments+1 where id=#{id}
    </update>
    <update id="updateTravelDetailCommentsSub"  parameterType="long">
          update t_travel set comments=comments-1 where id=#{id} and comments>=1
    </update>

    <update id="updateTravelDetailCollectionsAdd"  parameterType="long">
         update t_travel set collections=collections+1 where id=#{id}
    </update>
    <update id="updateTravelDetailCollectionsSub"  parameterType="long">
         update t_travel set collections=collections-1 where id=#{id} and collections>=1
    </update>

    <select id="selectPraisesCount" parameterType="com.inuol.dto.strategy.PraisesDto" resultType="int">
          select count(1) from t_travel_praises where tid=#{tid} and uid=#{uid}
    </select>
    <select id="selectPraisesCountStatus" parameterType="com.inuol.dto.strategy.PraisesDto" resultType="int">
          select count(1) from t_travel_praises where tid=#{tid} and uid=#{uid} and status=#{status}
    </select>


    <insert id="insertPraises" parameterType="com.inuol.dto.strategy.PraisesDto">
          insert into t_travel_praises(`id`,`tid`,`uid`,`status`) values
          (#{id},#{tid},#{uid},#{status})
    </insert>

    <update id="updatePraises" parameterType="com.inuol.dto.strategy.PraisesDto">
          update t_travel_praises set status=#{status},update_time=#{updateTime} where tid=#{tid} and uid=#{uid}
    </update>

    <insert id="insertComment" parameterType="com.inuol.dto.strategy.CommentDto">
          insert into t_travel_comment(`id`,`tid`,`uid`,`reply_uid`,`title`,`del_flag`)
          values (#{id},#{tid},#{uid},#{replyUid},#{title},#{delFlag})
    </insert>

    <update id="deleteComment" parameterType="long">
            update t_travel_comment set del_flag=2,update_time=now() where id=#{id}
    </update>

    <select id="selectTravelCommentList" parameterType="map" resultType="com.inuol.vo.strategy.TravelCommentVo">

              select * from (
                  select * from (select  * from t_travel_comment where tid=#{id} and del_flag=1 order by praises desc limit 3) tmp1
               union
                  select * from (select  * from t_travel_comment where tid=#{id} and del_flag=1 order by create_time desc ) tmp2
             )tmp


    </select>

    <select id="selectCommentPraisesCount" parameterType="com.inuol.dto.strategy.CommentPraisesDto" resultType="int">
         select count(1) from t_travel_comment__praises where tid=#{tid} and uid=#{uid}
    </select>

    <select id="selectCommentPraisesCountStatus"  parameterType="com.inuol.dto.strategy.CommentPraisesDto" resultType="int">
          select count(1) from t_travel_comment__praises where tid=#{tid} and uid=#{uid} and status=#{status}
    </select>

    <insert id="insertCommentPraises" parameterType="com.inuol.dto.strategy.CommentPraisesDto">
          insert into t_travel_comment__praises(`id`,`tid`,`uid`,`status`) values
          (#{id},#{tid},#{uid},#{status})
    </insert>

    <update id="updateCommentPraises" parameterType="com.inuol.dto.strategy.CommentPraisesDto">
          update t_travel_comment__praises set status=#{status},update_time=#{updateTime} where tid=#{tid} and uid=#{uid}
    </update>
    <update id="updateTravelCommentPraisesAdd" parameterType="long">
             update t_travel_comment set praises=praises+1 where id=#{id}
    </update>
    <update id="updateTravelCommentPraisesSub" parameterType="long">
             update t_travel_comment set praises=praises-1 where id=#{id} and praises>=1
    </update>

    <insert id="insertCollections" parameterType="com.inuol.dto.strategy.CollectionsDto">
        insert into   `t_travel_collections` (`id`,`tid`,`uid`) values (#{id},#{tid},#{uid})
    </insert>

    <delete id="deleteCollections" parameterType="com.inuol.dto.strategy.CollectionsDto">
        delete from  `t_travel_collections` where uid= #{uid} and tid = #{tid}
    </delete>
    <select id="selectCollectionsCount" parameterType="com.inuol.dto.strategy.CollectionsDto" resultType="int">
        select count(1) from  `t_travel_collections` where uid= #{uid} and tid = #{tid}
    </select>
    <select id="selectUserCollectionsList" parameterType="string"  resultType="com.inuol.entity.strategy.Travel">

            select t1.id,t1.title,t1.contents,t1.label_id,t2.title labelName,
              t1.annex_type,t1.annex_urls,t1.img,t1.create_address_name,t1.praises,t1.clicks,t1.comments,t1.collections, t1.create_user_id,t3.id cid
              from t_travel_collections t3
			  inner join t_travel t1 on t3.tid = t1.id
              LEFT JOIN t_travel_label t2 on t1.label_id=t2.id

              where t3.uid=#{uid}
              order by  t3.create_time desc
    </select>

    <select id="selectTravelPcVoList" parameterType="map" resultType="com.inuol.vo.strategy.TravelPcVo">
          select * from(
                        select (@rownum := @rownum + 1) AS rownum,t1.* from(
                            select id,title,create_address_name ,
                                top_status topStatus,
                                `status`,
                                clicks,praises,comments,collections,
                            create_user_id createUserId,
                            create_time  ,top_time
                             from t_travel
                            where top_status=2
                             order by  top_time desc LIMIT  5
                            ) t1,
                        (SELECT @rownum := 0) AS rn
                        where 1=1
                        <if test="title!=null">
                                and title like concat('%',#{title},'%')
                        </if>
                        <if test="createAddressName!=null">
                                and create_address_name  like concat('%',#{createAddressName},'%')
                        </if>
                        <if test="status!=null">
                                and  status=#{status}
                        </if>

                        <if test="createTimeStart!=null">
                                and create_time >=#{createTimeStart}
                        </if>
                        <if test="createTimeEnd!=null">
                                and create_time &lt;= #{createTimeEnd}
                        </if>
                         <if test="userIds!=null">
                               and create_user_id in
                             <foreach collection="userIds" item="userId" index="index" open="(" close=")" separator=",">
                                 #{userId}
                             </foreach>
                         </if>

	                    UNION
                        select null rownum, t2.* from(
                        select id,title,create_address_name ,
                                top_status topStatus,
                                `status`,
                                clicks,praises,comments,collections,
                            create_user_id createUserId,
                            create_time  ,top_time
                             from t_travel
                            where top_status=1
                            <if test="title!=null">
                                and title like concat('%',#{title},'%')
                            </if>
                            <if test="createAddressName!=null">
                                and create_address_name  like concat('%',#{createAddressName},'%')
                            </if>
                            <if test="status!=null">
                                and  status=#{status}
                            </if>

                            <if test="createTimeStart!=null">
                                and create_time >=#{createTimeStart}
                            </if>
                            <if test="createTimeEnd!=null">
                                and create_time &lt;= #{createTimeEnd}
                            </if>
                             <if test="userIds!=null">
                                    and create_user_id in
                                    <foreach collection="userIds" item="userId" index="index" open="(" close=")" separator=",">
                                        #{userId}
                                    </foreach>
                             </if>
                        ) t2
          )tmp where 1=1 order by topStatus desc, top_time desc ,create_time desc
    </select>

    <update id="top" parameterType="long">
          update t_travel set top_status =2 ,top_time=now() where id=#{id}
    </update>
    <update id="updateStatus" parameterType="map">
          update t_travel set status=#{status},update_user_id=#{uid},update_time=now() where id=#{id}
    </update>
    <update id="updateCommentStatus" parameterType="map">
         update t_travel_comment set del_flag=#{status},update_user_id=#{uid},update_time=now() where id=#{id}
    </update>

    <select id="selectCommentById" parameterType="long" resultType="com.inuol.entity.strategy.Comment">
        select * from t_travel_comment where id =#{id}
    </select>
</mapper>