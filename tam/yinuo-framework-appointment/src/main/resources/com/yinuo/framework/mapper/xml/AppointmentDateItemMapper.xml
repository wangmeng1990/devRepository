<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yinuo.appointment.mapper.AppointmentDateItemMapper">
  <resultMap id="BaseResultMap" type="com.inuol.entity.AppointmentDateItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="scenic_id" jdbcType="INTEGER" property="scenicId" />
    <result column="scenic" jdbcType="VARCHAR" property="scenic" />
    <result column="date_id" jdbcType="INTEGER" property="dateId" />
    <result column="play_date" jdbcType="VARCHAR" property="playDate" />
    <result column="time_quantum" jdbcType="VARCHAR" property="timeQuantum" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scenic_id, scenic, date_id, play_date, time_quantum, num, sort, create_date, 
    update_date
  </sql>
  <select id="selectByExample" parameterType="com.inuol.entity.AppointmentDateItemCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_appointment_date_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_appointment_date_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_appointment_date_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.inuol.entity.AppointmentDateItemCriteria">
    delete from t_appointment_date_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.inuol.entity.AppointmentDateItem">
    insert into t_appointment_date_item (id, scenic_id, scenic, 
      date_id, play_date, time_quantum, 
      num, sort, create_date, 
      update_date)
    values (#{id,jdbcType=BIGINT}, #{scenicId,jdbcType=INTEGER}, #{scenic,jdbcType=VARCHAR}, 
      #{dateId,jdbcType=INTEGER}, #{playDate,jdbcType=VARCHAR}, #{timeQuantum,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.inuol.entity.AppointmentDateItem">
    insert into t_appointment_date_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scenicId != null">
        scenic_id,
      </if>
      <if test="scenic != null">
        scenic,
      </if>
      <if test="dateId != null">
        date_id,
      </if>
      <if test="playDate != null">
        play_date,
      </if>
      <if test="timeQuantum != null">
        time_quantum,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="scenicId != null">
        #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="scenic != null">
        #{scenic,jdbcType=VARCHAR},
      </if>
      <if test="dateId != null">
        #{dateId,jdbcType=INTEGER},
      </if>
      <if test="playDate != null">
        #{playDate,jdbcType=VARCHAR},
      </if>
      <if test="timeQuantum != null">
        #{timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.inuol.entity.AppointmentDateItemCriteria" resultType="java.lang.Long">
    select count(*) from t_appointment_date_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_appointment_date_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.scenicId != null">
        scenic_id = #{record.scenicId,jdbcType=INTEGER},
      </if>
      <if test="record.scenic != null">
        scenic = #{record.scenic,jdbcType=VARCHAR},
      </if>
      <if test="record.dateId != null">
        date_id = #{record.dateId,jdbcType=INTEGER},
      </if>
      <if test="record.playDate != null">
        play_date = #{record.playDate,jdbcType=VARCHAR},
      </if>
      <if test="record.timeQuantum != null">
        time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_appointment_date_item
    set id = #{record.id,jdbcType=BIGINT},
      scenic_id = #{record.scenicId,jdbcType=INTEGER},
      scenic = #{record.scenic,jdbcType=VARCHAR},
      date_id = #{record.dateId,jdbcType=INTEGER},
      play_date = #{record.playDate,jdbcType=VARCHAR},
      time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.inuol.entity.AppointmentDateItem">
    update t_appointment_date_item
    <set>
      <if test="scenicId != null">
        scenic_id = #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="scenic != null">
        scenic = #{scenic,jdbcType=VARCHAR},
      </if>
      <if test="dateId != null">
        date_id = #{dateId,jdbcType=INTEGER},
      </if>
      <if test="playDate != null">
        play_date = #{playDate,jdbcType=VARCHAR},
      </if>
      <if test="timeQuantum != null">
        time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inuol.entity.AppointmentDateItem">
    update t_appointment_date_item
    set scenic_id = #{scenicId,jdbcType=INTEGER},
      scenic = #{scenic,jdbcType=VARCHAR},
      date_id = #{dateId,jdbcType=INTEGER},
      play_date = #{playDate,jdbcType=VARCHAR},
      time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>