<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yinuo.appointment.mapper.AppointmentDateMapper">
  <resultMap id="BaseResultMap" type="com.inuol.entity.AppointmentDate">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="scenic_id" jdbcType="INTEGER" property="scenicId" />
    <result column="scenic" jdbcType="VARCHAR" property="scenic" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="effective_date" jdbcType="VARCHAR" property="effectiveDate" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="advance_time" jdbcType="INTEGER" property="advanceTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scenic_id, scenic, period, effective_date, start_time, advance_time, status, 
    create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.inuol.entity.AppointmentDateCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_appointment_date
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_appointment_date
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_appointment_date
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.inuol.entity.AppointmentDateCriteria">
    delete from t_appointment_date
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.inuol.entity.AppointmentDate">
    insert into t_appointment_date (id, scenic_id, scenic, 
      period, effective_date, start_time, 
      advance_time, status, create_date, 
      update_date)
    values (#{id,jdbcType=BIGINT}, #{scenicId,jdbcType=INTEGER}, #{scenic,jdbcType=VARCHAR}, 
      #{period,jdbcType=INTEGER}, #{effectiveDate,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, 
      #{advanceTime,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.inuol.entity.AppointmentDate">
    insert into t_appointment_date
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scenicId != null">
        scenic_id,
      </if>
      <if test="scenic != null">
        scenic,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="effectiveDate != null">
        effective_date,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="advanceTime != null">
        advance_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="scenicId != null">
        #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="scenic != null">
        #{scenic,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="effectiveDate != null">
        #{effectiveDate,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="advanceTime != null">
        #{advanceTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.inuol.entity.AppointmentDateCriteria" resultType="java.lang.Long">
    select count(*) from t_appointment_date
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_appointment_date
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.scenicId != null">
        scenic_id = #{record.scenicId,jdbcType=INTEGER},
      </if>
      <if test="record.scenic != null">
        scenic = #{record.scenic,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.effectiveDate != null">
        effective_date = #{record.effectiveDate,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.advanceTime != null">
        advance_time = #{record.advanceTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_appointment_date
    set id = #{record.id,jdbcType=BIGINT},
      scenic_id = #{record.scenicId,jdbcType=INTEGER},
      scenic = #{record.scenic,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=INTEGER},
      effective_date = #{record.effectiveDate,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      advance_time = #{record.advanceTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.inuol.entity.AppointmentDate">
    update t_appointment_date
    <set>
      <if test="scenicId != null">
        scenic_id = #{scenicId,jdbcType=INTEGER},
      </if>
      <if test="scenic != null">
        scenic = #{scenic,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="effectiveDate != null">
        effective_date = #{effectiveDate,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="advanceTime != null">
        advance_time = #{advanceTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inuol.entity.AppointmentDate">
    update t_appointment_date
    set scenic_id = #{scenicId,jdbcType=INTEGER},
      scenic = #{scenic,jdbcType=VARCHAR},
      period = #{period,jdbcType=INTEGER},
      effective_date = #{effectiveDate,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      advance_time = #{advanceTime,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- add new  -->
  
  
  <select id="queryDateInfo" parameterType="java.util.Map" resultType="java.util.Map">
	  SELECT t.id AS dateId,t.`scenic_id` AS scenicId,t.`scenic`,t.`period`,t.`start_time` AS startTime,t.`advance_time` AS advanceTime,
	t1.`time_quantum` AS timeQuantum,t1.`num`,t1.`sort`
	FROM t_appointment_date t 
	INNER JOIN `t_appointment_date_item` t1 ON t.`scenic_id`=t1.`scenic_id` AND t.`id`=t1.`date_id`
	WHERE t.`scenic_id`=#{scenicId} ORDER BY t1.`sort` ASC
  </select>
  
  <!-- 景点当前时间可预约总量 -->
  <select id="queryScenicAppointment" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT t1.date_id AS dateId,t1.num,t2.play_date AS playDate,IFNULL(t2.companion,0) AS companion FROM 
	(SELECT t.`scenic_id`,t.`date_id`,SUM(t.num) AS num FROM t_appointment_date_item t
	WHERE t.`scenic_id`=#{scenicId} AND t.`date_id` IN
	<foreach collection="dateIdList" item="item" index="index" open="(" separator="," close=")">
	 #{item}
	</foreach>
	AND (DATE_FORMAT(NOW(),'%H:%i')>=LEFT(t.`time_quantum`,5) 
	AND RIGHT(t.`time_quantum`,5)>DATE_FORMAT(NOW(),'%H:%i') 
	OR LEFT(t.`time_quantum`,5)>=DATE_FORMAT(NOW(),'%H:%i')) 
	GROUP BY t.`scenic_id`,t.`date_id`) t1 
	LEFT JOIN (SELECT t.`scenic_id`,t.`play_date`,SUM(t.`companion`) AS companion  FROM t_tourist_appointment t 
	WHERE t.`scenic_id`=#{scenicId} AND t.`status`=0  
	AND (DATE_FORMAT(NOW(),'%H:%i')>=LEFT(t.`time_quantum`,5) AND RIGHT(t.`time_quantum`,5)>DATE_FORMAT(NOW(),'%H:%i')
	OR LEFT(t.`time_quantum`,5)>=DATE_FORMAT(NOW(),'%H:%i') 
	) AND t.`play_date` IN
	<foreach collection="dateList" item="item" index="index" open="(" separator="," close=")">
	     #{item}
	</foreach>
	GROUP BY t.`play_date`) t2 ON t1.scenic_id=t2.scenic_id
  </select>
  
  
</mapper>