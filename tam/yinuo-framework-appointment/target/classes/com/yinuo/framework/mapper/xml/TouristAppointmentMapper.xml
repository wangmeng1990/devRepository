<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yinuo.appointment.mapper.TouristAppointmentMapper">
  <resultMap id="BaseResultMap" type="com.inuol.entity.TouristAppointment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="scenic_id" jdbcType="BIGINT" property="scenicId" />
    <result column="scenic_name" jdbcType="VARCHAR" property="scenicName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="play_date" jdbcType="VARCHAR" property="playDate" />
    <result column="time_quantum" jdbcType="VARCHAR" property="timeQuantum" />
    <result column="companion" jdbcType="INTEGER" property="companion" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, serial_no, uid, name, mobile, scenic_id, scenic_name, type, status, play_date, 
    time_quantum, companion, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.inuol.entity.TouristAppointmentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tourist_appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_tourist_appointment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_tourist_appointment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.inuol.entity.TouristAppointmentCriteria">
    delete from t_tourist_appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.inuol.entity.TouristAppointment">
    insert into t_tourist_appointment (id, serial_no, uid, 
      name, mobile, scenic_id, 
      scenic_name, type, status, 
      play_date, time_quantum, companion, 
      create_date, update_date)
    values (#{id,jdbcType=BIGINT}, #{serialNo,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{scenicId,jdbcType=BIGINT}, 
      #{scenicName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{playDate,jdbcType=VARCHAR}, #{timeQuantum,jdbcType=VARCHAR}, #{companion,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.inuol.entity.TouristAppointment">
    insert into t_tourist_appointment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serialNo != null">
        serial_no,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="scenicId != null">
        scenic_id,
      </if>
      <if test="scenicName != null">
        scenic_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="playDate != null">
        play_date,
      </if>
      <if test="timeQuantum != null">
        time_quantum,
      </if>
      <if test="companion != null">
        companion,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="serialNo != null">
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="scenicId != null">
        #{scenicId,jdbcType=BIGINT},
      </if>
      <if test="scenicName != null">
        #{scenicName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="playDate != null">
        #{playDate,jdbcType=VARCHAR},
      </if>
      <if test="timeQuantum != null">
        #{timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="companion != null">
        #{companion,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.inuol.entity.TouristAppointmentCriteria" resultType="java.lang.Long">
    select count(*) from t_tourist_appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_tourist_appointment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.serialNo != null">
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.scenicId != null">
        scenic_id = #{record.scenicId,jdbcType=BIGINT},
      </if>
      <if test="record.scenicName != null">
        scenic_name = #{record.scenicName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.playDate != null">
        play_date = #{record.playDate,jdbcType=VARCHAR},
      </if>
      <if test="record.timeQuantum != null">
        time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="record.companion != null">
        companion = #{record.companion,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_tourist_appointment
    set id = #{record.id,jdbcType=BIGINT},
      serial_no = #{record.serialNo,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      scenic_id = #{record.scenicId,jdbcType=BIGINT},
      scenic_name = #{record.scenicName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      play_date = #{record.playDate,jdbcType=VARCHAR},
      time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      companion = #{record.companion,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.inuol.entity.TouristAppointment">
    update t_tourist_appointment
    <set>
      <if test="serialNo != null">
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="scenicId != null">
        scenic_id = #{scenicId,jdbcType=BIGINT},
      </if>
      <if test="scenicName != null">
        scenic_name = #{scenicName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="playDate != null">
        play_date = #{playDate,jdbcType=VARCHAR},
      </if>
      <if test="timeQuantum != null">
        time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="companion != null">
        companion = #{companion,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inuol.entity.TouristAppointment">
    update t_tourist_appointment
    set serial_no = #{serialNo,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      scenic_id = #{scenicId,jdbcType=BIGINT},
      scenic_name = #{scenicName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      play_date = #{playDate,jdbcType=VARCHAR},
      time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      companion = #{companion,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- add new  -->
  
 <select id="getAppointmentScenic" resultType="com.inuol.vo.AppointmentScenicVo">
SELECT t.id AS scenicId,t.`scenic_name` AS scenicName,IFNULL(t1.num,0) AS num,t.`cover` FROM `t_scenic_area` t
LEFT JOIN (SELECT SUM(t.companion) AS num,t.`scenic_id` FROM t_tourist_appointment t
WHERE t.`status`=0 AND t.`play_date`=DATE_FORMAT(NOW(),'%Y-%m-%d')
AND DATE_FORMAT(NOW(),'%H:%i')>=LEFT(t.`time_quantum`,5)
AND RIGHT(t.`time_quantum`,5)>DATE_FORMAT(NOW(),'%H:%i')
GROUP BY t.`scenic_id`) t1 ON t.id=t1.scenic_id
 </select>
  
 
</mapper>